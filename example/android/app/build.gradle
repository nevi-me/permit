def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
	localPropertiesFile.withInputStream { stream ->
		localProperties.load(stream)
	}
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
	throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
	compileSdkVersion 25
	buildToolsVersion '25.0.3'
	defaultConfig {
		applicationId "com.goposse.permitexample"
		minSdkVersion 21
		targetSdkVersion 25
		versionCode 1
		versionName "1.0.0"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}
	lintOptions {
		disable 'InvalidPackage'
	}
	buildTypes {
		release {
			// TODO: Add your own signing config for the release build.
			// Signing with the debug keys for now, so `flutter run --release` works.
			signingConfig signingConfigs.debug
		}
	}
}

buildscript {
	ext.support_lib_ver = '25.3.1'
	ext.google_play_ver = '11.8.0'
}

flutter {
	source '../..'
}

dependencies {
	// kotlin
	compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
	// google
	compile "com.android.support:support-v13:$support_lib_ver"
	compile "com.android.support:support-v4:$support_lib_ver"

	// test
	androidTestCompile "com.android.support:support-annotations:$support_lib_ver"
	androidTestCompile 'com.android.support.test:runner:0.5'
	androidTestCompile 'com.android.support.test:rules:0.5'
}
